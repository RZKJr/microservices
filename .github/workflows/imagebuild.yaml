name: Build Docker Image

on:
  workflow_dispatch:
    # Manually trigger the workflow
  push:
    branches:
      - feature-branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Azure Container Registry Login
        run: az acr login --name "rz8166"
     

      - name: Finding files and store to output
        id: finding-files
        run: |
             echo "::set-output name=DOCKERFILES::$(find . -name 'Docker*' -print)"
          

      - name: Build and Push to ACR
        run: |
          IFS="," read -a myarray <<< ${{ steps.finding-files.outputs.DOCKERFILES }}
          echo "Found Dockerfiles:"
          for i in "${myarray[@]}"; do
            echo " - $i"

          done
     
          for i in "${myarray[@]}"; do
            echo "Found Dockerfile: $i"
            #editing the name to remove ./
            tagcaps=${i#"./"}
            #converting to lowercase
            tag=${tagcaps,,}
            az acr build --registry "rz8166" --image "$tag:${{ github.sha }}" .
            echo "Successfully built and pushed image with tag: $tag:${{ github.sha }}"
          done
          
         
         


      # - name: Build and Push Docker Image
      #   run: |

      #     # Directory containing Dockerfiles (change as needed)
      #       DIR="./"

      #       # Loop through all Dockerfiles in the directory and subdirectories
      #       find "$DIR" -type f -name 'Dockerfile' | while read dockerfile; do
      #         # Get the directory of the Dockerfile
      #         build_context=$(dirname "$dockerfile")
      #         echo "Build context-- $build_context"
      #         # Create a tag based on the directory name (customize as needed)
      #         #image_tag=$(basename "$build_context")
      #         #echo "Image tag-- $image_tag"
      #         echo "Building image $dockerfile from $dockerfile ..."
      #         tagcaps=${dockerfile#"./"}
      #         tag=${tagcaps,,}
      #         # Build the Docker image using the Dockerfile directory as context
      #         az acr build --registry "rz8166" --image "$tag:${{ github.sha }}" "$build_context"  
      #         echo "Successfully built and pushed image with tag: $tag:${{ github.sha }}"
      #   done

      
